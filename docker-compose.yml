services:
  # ================================
  # Traefik reverse proxy
  # ================================
  reverse-proxy:
    image: traefik:v3.4
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=ongchen10sherpa@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--api.dashboard=true"
    ports:
      - "80:80"
      - "443:443"
    labels:
      # Secure Traefik Dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.gocloudnepal.com`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=admin:$2y$05$2hQXRr9Rpo8aJs0ERvDMauAwYEHPh7eSvTY.CTzLyBYKr.mkGInKO"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  # ================================
  # Production API
  # ================================
  khel-prod:
    image: khel:latest
    user: "nonroot:nonroot"
    container_name: khel-prod
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - /opt/khel/.env.prod # Inject prod secrets at runtime
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.khel-prod.rule=Host(`api.gocloudnepal.com`)"
      - "traefik.http.routers.khel-prod.entrypoints=websecure"
      - "traefik.http.routers.khel-prod.tls.certresolver=myresolver"
      - "traefik.http.services.khel-prod.loadbalancer.server.port=8080"
    restart: always

  # ================================
  # Staging API
  # ================================
  khel-staging:
    image: khel:latest
    user: "nonroot:nonroot"
    container_name: khel-staging
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - /opt/khel/.env.staging # Inject staging secrets at runtime
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.khel-staging.rule=Host(`api.staging.gocloudnepal.com`)"
      - "traefik.http.routers.khel-staging.entrypoints=websecure"
      - "traefik.http.routers.khel-staging.tls.certresolver=myresolver"
      - "traefik.http.services.khel-staging.loadbalancer.server.port=8080"
    restart: always

  # ================================
  # Watchtower: Auto-update containers
  # ================================
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval=30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  letsencrypt:
